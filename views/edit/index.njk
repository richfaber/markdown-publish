{% extends "layout/common.njk" %}{% block headtitle %}{{ fileName }}{% endblock %}{% block headresource %}    <script type="text/javascript" src="/vendor/simplemde-markdown-editor/dist/simplemde.min.js"></script>    <link rel="stylesheet" href="/vendor/simplemde-markdown-editor/dist/simplemde.min.css">    <link rel="stylesheet" href="/resources/css/edit.css" />{% endblock %}{% block content %}    <div class="document-title">Markdown Editor</div>    <div class="editor-simplemde" id="editorSimplemde">        <textarea>{{ markdownData }}</textarea>    </div>    <div class="edit-function">        <button type="button" class="button button-copyhtml" id="copyHtml">Copy HTML</button>        <label  class="button button-copyimage typeFile" for="imageFileContext">Copy ImageToBase64</label>        <input type="file" accept="image/*" id="imageFileContext" />        <button type="button" class="button button-save">Save</button>        <button type="button" class="button-movetop">Top</button>    </div>{% endblock %}{% block script %}    <script type="text/javascript">        $(function() {            function imageFileToBase64Code(e) {                return encodeBase64ImageFile( this.files[0] )                    .then(function(res) {                        copyToClipboard( "#content", res.message ).then(function() {                            $.toast({                                heading: 'Success',                                icon: 'success',                                loader: true,                                textAlign : 'left',                                position : 'top-center',                                text : "이미지 코드가 클립보드에 복사되었습니다"                            });                        });                    });            }            function imageFileToBase64AppendToEditor( editor ) {                $('body').append('<input type="file" accept="image/*" id="editorImageFileContext" />').on('change', function(e) {                    return encodeBase64ImageFile( e.target.files[0] )                        .then(function(res) {                            var pos = editor.codemirror.getCursor();                            editor.codemirror.replaceRange("![](" + res.message + ")", pos);                            $("#editorImageFileContext").remove();                        });                });                $("#editorImageFileContext").get(0).click();            }            function copyHtml(e) {                copyToClipboard( "#content", editorSimplemde.options.previewRender( editorSimplemde.value() ) ).then(function() {                    $.toast({                        heading: 'Success',                        icon: 'success',                        loader: true,                        textAlign : 'left',                        position : 'top-center',                        text : "이미지 코드가 클립보드에 복사되었습니다"                    });                });            }            $('#imageFileContext').on("change", imageFileToBase64Code);            $("#copyHtml").on("click", copyHtml);            window.editorSimplemde = new SimpleMDE({                autofocus: true,                // autosave: {                //     enabled: true,                //     uniqueId: "MyUniqueID",                //     delay: 1000,                // },                // blockStyles: {                //     bold: "__",                //     italic: "_"                // },                element: $("#editorSimplemde textarea")[0],                forceSync: true,                // hideIcons: ["guide", "heading"],                // indentWithTabs: false,                // initialValue: "Hello world!",                insertTexts: {                    horizontalRule: ["", "\n\n-----\n\n"],                    image: ["![](", ")"],                    link: ["[", "]()"],                    table: ["", "\n\n| Column 1 | Column 2 | Column 3 |\n| -------- | -------- | -------- |\n| Text     | Text      | Text     |\n\n"],                },                lineWrapping: false,                parsingConfig: {                    allowAtxHeaderWithoutSpace: true,                    strikethrough: false,                    underscoresBreakWords: true,                },                placeholder: "내용을 입력하세요",                // previewRender: function(plainText) {                //     return customMarkdownParser(plainText); // Returns HTML from a custom parser                // },                // previewRender: function(plainText, preview) { // Async method                //     setTimeout(function(){                //         preview.innerHTML = customMarkdownParser(plainText);                //     }, 250);                //                //     return "Loading...";                // },                // promptURLs: true,                // renderingConfig: {                //     singleLineBreaks: false,                //     codeSyntaxHighlighting: true,                // },                shortcuts: {                    drawTable: "Cmd-Alt-T"                },                // showIcons: ["code", "table"],                spellChecker: false,                // status: false,                // status: ["autosave", "lines", "words", "cursor"], // Optional usage                // status: ["autosave", "lines", "words", "cursor", {                //     className: "keystrokes",                //     defaultValue: function(el) {                //         this.keystrokes = 0;                //         el.innerHTML = "0 Keystrokes";                //     },                //     onUpdate: function(el) {                //         el.innerHTML = ++this.keystrokes + " Keystrokes";                //     }                // }], // Another optional usage, with a custom status bar item that counts keystrokes                // styleSelectedText: false,                tabSize: 4,                toolbar: [                    "preview",                    "side-by-side",                    "fullscreen",                    "|",                    "link",                    "image",                    {                        name: "image2code",                        action: imageFileToBase64AppendToEditor,                        className: "fa fa-file-image-o",                        title: "image To base64 Code"                    },                    "|",                    "heading",                    "table",                    "code",                    "horizontal-rule",                    "unordered-list",                    "ordered-list",                    "|",                    "quote",                    "bold",                    "italic",                    "strikethrough",                    "|",                    // "heading-smaller",                    // "heading-bigger",                    // "heading-1",                    // "heading-2",                    // "heading-3",                    // "clean-block",                    "guide"                ],                // toolbar: false,                // toolbarTips: false,            });        });    </script>{% endblock %}